From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: fgei <fgei@gmail.com>
Date: Thu, 16 May 2024 17:56:56 +0000
Subject: [PATCH] Do not select search query text when opening web and global
 search

---
 .../chrome/browser/LaunchIntentDispatcher.java   |  2 +-
 .../browser/LaunchIntentDispatcherHooks.java     | 12 +++++++++++-
 .../browser/searchwidget/SearchActivity.java     |  3 ++-
 .../searchwidget/SearchActivityHooks.java        | 14 ++++++++++++++
 .../SearchActivityLocationBarLayout.java         | 16 +++++++++++++++-
 5 files changed, 43 insertions(+), 4 deletions(-)

diff --git a/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcher.java b/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcher.java
index edb1c9b177b57..e54b3eb20ff61 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcher.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcher.java
@@ -223,7 +223,7 @@ public class LaunchIntentDispatcher {
                     ContextUtils.getApplicationContext(), SearchActivity.class);
             searchActivityIntent.putExtra(SearchManager.QUERY, query);
             searchActivityIntent = LaunchIntentDispatcherHooks.maybeModifySearchIntents(
-                    mActivity, searchActivityIntent);
+                    mActivity, searchActivityIntent, intent);
             mActivity.startActivity(searchActivityIntent);
         }
         return true;
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcherHooks.java b/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcherHooks.java
index 2aa023c3f15c1..1fdc7b7c0d4dc 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcherHooks.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcherHooks.java
@@ -1,9 +1,12 @@
 package org.chromium.chrome.browser;
 
 import android.app.Activity;
+import android.app.SearchManager;
 import android.content.Context;
 import android.content.Intent;
 
+import org.chromium.chrome.browser.searchwidget.SearchActivityHooks;
+
 final class LaunchIntentDispatcherHooks {
 
     private static Intent maybeCreateIncognitoTabIntentFor(Context context, Intent intent) {
@@ -30,8 +33,15 @@ final class LaunchIntentDispatcherHooks {
         return newIntent;
     }
 
-    static Intent maybeModifySearchIntents(Activity activity, Intent intent) {
+    static Intent maybeModifySearchIntents(Activity activity, Intent intent,
+            Intent originalIntent) {
         Intent newIntent = maybeCreateIncognitoTabIntentFor(activity, intent);
+        if (originalIntent != null) {
+            String originalAction = originalIntent.getAction();
+            boolean shoudlSelectAllText = !Intent.ACTION_WEB_SEARCH.equals(originalAction)
+                    && !SearchManager.INTENT_ACTION_GLOBAL_SEARCH.equals(originalAction);
+            newIntent.putExtra(SearchActivityHooks.EXTRA_SELECT_ALL_TEXT, shoudlSelectAllText);
+        }
 
         return newIntent;
     }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivity.java
index 0540dc9341529..7aded2b0dcc13 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivity.java
@@ -546,7 +546,8 @@ public class SearchActivity extends AsyncInitializationActivity
                 mSearchType,
                 SearchActivityUtils.getIntentQuery(getIntent()),
                 mLocationBarCoordinator.getVoiceRecognitionHandler(),
-                getWindowAndroid());
+                getWindowAndroid(),
+                SearchActivityHooks.getShouldSelectAllQueryTextInSearchBox(getIntent()));
     }
 
     @Override
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivityHooks.java b/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivityHooks.java
index 10cde3e0fb01b..728d447a28812 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivityHooks.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivityHooks.java
@@ -27,4 +27,18 @@ public class SearchActivityHooks {
         return IntentUtils.safeGetBooleanExtra(intent,
                 IntentHandler.EXTRA_INCOGNITO_MODE, false);
     }
+
+    public static final String EXTRA_SELECT_ALL_TEXT =
+            "org.chromium.chrome.browser.searchwidget.SELECT_ALL_TEXT";
+
+    static boolean getShouldSelectAllQueryTextInSearchBox(Intent intent) {
+        String prepopulatedIntentQuery = SearchActivityUtils.getIntentQuery(intent);
+        prepopulatedIntentQuery = prepopulatedIntentQuery != null ? prepopulatedIntentQuery : "";
+
+        if (prepopulatedIntentQuery.isEmpty()) {
+            return true;
+        }
+
+        return IntentUtils.safeGetBooleanExtra(intent, EXTRA_SELECT_ALL_TEXT, true);
+    }
 }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivityLocationBarLayout.java b/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivityLocationBarLayout.java
index 9b42b861ea58a..03e79a8a98726 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivityLocationBarLayout.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivityLocationBarLayout.java
@@ -120,7 +120,21 @@ public class SearchActivityLocationBarLayout extends LocationBarLayout {
             @Nullable String optionalText,
             @NonNull VoiceRecognitionHandler voiceRecognitionHandler,
             @NonNull WindowAndroid windowAndroid) {
+        beginQuery(origin, searchType, optionalText, voiceRecognitionHandler, windowAndroid, true);
+    }
 
+    /**
+     * See {@link SearchActivityLocationBarLayout#beginQuery(int, int, String, VoiceRecognitionHandler, WindowAndroid)}
+     * for details. Added parameter(s):
+     * @param shouldSelectAllText Indicates if selection state of search query should be all selected or not.
+     */
+    void beginQuery(
+            @IntentOrigin int origin,
+            @SearchType int searchType,
+            @Nullable String optionalText,
+            @NonNull VoiceRecognitionHandler voiceRecognitionHandler,
+            @NonNull WindowAndroid windowAndroid,
+            boolean shouldSelectAllText) {
         if (origin == IntentOrigin.CUSTOM_TAB) {
             mUrlBar.setHint(R.string.omnibox_on_cct_empty_hint);
         } else {
@@ -132,7 +146,7 @@ public class SearchActivityLocationBarLayout extends LocationBarLayout {
         mUrlCoordinator.setUrlBarData(
                 UrlBarData.forNonUrlText(optionalText == null ? "" : optionalText),
                 UrlBar.ScrollType.NO_SCROLL,
-                SelectionState.SELECT_ALL);
+                shouldSelectAllText ? SelectionState.SELECT_ALL : SelectionState.SELECT_END);
 
         if (mPendingSearchPromoDecision || (searchType != SearchType.TEXT && !mNativeInitialized)) {
             mPendingBeginQuery = true;

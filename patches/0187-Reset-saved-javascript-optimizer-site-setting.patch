From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: quh4gko8 <88831734+quh4gko8@users.noreply.github.com>
Date: Thu, 30 Jan 2025 15:04:31 +0000
Subject: [PATCH] Reset saved javascript optimizer site setting

With the existence of Javascript JIT site setting UI shown in Vanadium
which fully disables JIT instead of only disabling the optimizers, the
added setting upstream for disabling only the optimizers doesn't
provide as much additional protection as stated in its upstream
description.

Earlier commits have removed Javascript (JIT) optimizer site setting and
its link to avoid confusion.

Based on removal of Javascript JIT site settings at:
https://chromium-review.googlesource.com/c/chromium/src/+/5840556
---
 .../content_settings_default_provider.cc      | 25 +++++++++++++++++++
 .../browser/content_settings_pref_provider.cc | 25 +++++++++++++++++++
 2 files changed, 50 insertions(+)

diff --git a/components/content_settings/core/browser/content_settings_default_provider.cc b/components/content_settings/core/browser/content_settings_default_provider.cc
index 67524afc28f16..b85bbc6481280 100644
--- a/components/content_settings/core/browser/content_settings_default_provider.cc
+++ b/components/content_settings/core/browser/content_settings_default_provider.cc
@@ -103,6 +103,20 @@ const std::string& GetPrefName(ContentSettingsType type) {
 
 }  // namespace
 
+namespace {
+
+// Site settings removed downstream, or currently not meant for usage
+#if BUILDFLAG(IS_ANDROID)
+// TODO: Expose this again as an additional option to Javascript JIT
+// site settings UI option in Android
+constexpr char kDownstreamJavascriptOptimizerSettingToClear[] =
+    "profile.default_content_setting_values.javascript_optimizer";
+constexpr char kDownstreamJavascriptOptimizerSettingAlreadyWorkedAroundPref[] =
+    "profile.did_work_around_downstream_javascript_optimizer_default";
+#endif  // BUILDFLAG(IS_ANDROID)
+
+}  // namespace
+
 // static
 void DefaultProvider::RegisterProfilePrefs(
     user_prefs::PrefRegistrySyncable* registry) {
@@ -149,6 +163,10 @@ void DefaultProvider::RegisterProfilePrefs(
   // TODO(https://crbug.com/367181093): clean this up.
   registry->RegisterBooleanPref(kBug364820109AlreadyWorkedAroundPref, false);
 #endif  // !BUILDFLAG(IS_IOS) && !BUILDFLAG(IS_ANDROID)
+
+#if BUILDFLAG(IS_ANDROID)
+  registry->RegisterBooleanPref(kDownstreamJavascriptOptimizerSettingAlreadyWorkedAroundPref, false);
+#endif // BUILDFLAG(IS_ANDROID)
 }
 
 DefaultProvider::DefaultProvider(PrefService* prefs,
@@ -410,6 +428,13 @@ void DefaultProvider::DiscardOrMigrateObsoletePreferences() {
   // TODO(https://crbug.com/367181093): clean this up.
   prefs_->ClearPref(kBug364820109AlreadyWorkedAroundPref);
 #endif  // !BUILDFLAG(IS_IOS) && !BUILDFLAG(IS_ANDROID)
+
+#if BUILDFLAG(IS_ANDROID)
+  if (!prefs_->GetBoolean(kDownstreamJavascriptOptimizerSettingAlreadyWorkedAroundPref)) {
+    prefs_->ClearPref(kDownstreamJavascriptOptimizerSettingToClear);
+    prefs_->SetBoolean(kDownstreamJavascriptOptimizerSettingAlreadyWorkedAroundPref, true);
+  }
+#endif // BUILDFLAG(IS_ANDROID)
 }
 
 void DefaultProvider::MigrateGeolocationDefaultValue() {
diff --git a/components/content_settings/core/browser/content_settings_pref_provider.cc b/components/content_settings/core/browser/content_settings_pref_provider.cc
index 1c6eaefa64551..a24ef98cfadc0 100644
--- a/components/content_settings/core/browser/content_settings_pref_provider.cc
+++ b/components/content_settings/core/browser/content_settings_pref_provider.cc
@@ -76,6 +76,20 @@ constexpr char kBug364820109AlreadyWorkedAroundPref[] =
 
 }  // namespace
 
+namespace {
+
+// Site settings removed downstream, or currently not meant for usage
+#if BUILDFLAG(IS_ANDROID)
+// TODO: Expose this again as an additional option to Javascript JIT
+// site settings UI option in Android
+constexpr char kDownstreamJavascriptOptimizerSettingToClear[] =
+    "profile.content_settings.exceptions.javascript_optimizer";
+constexpr char kDownstreamJavascriptOptimizerSettingAlreadyWorkedAroundPref[] =
+    "profile.did_work_around_downstream_javascript_optimizer_exceptions";
+#endif  // BUILDFLAG(IS_ANDROID)
+
+}  // namespace
+
 // ////////////////////////////////////////////////////////////////////////////
 // PrefProvider:
 //
@@ -116,6 +130,10 @@ void PrefProvider::RegisterProfilePrefs(
   // TODO(https://crbug.com/367181093): clean this up.
   registry->RegisterBooleanPref(kBug364820109AlreadyWorkedAroundPref, false);
 #endif  // !BUILDFLAG(IS_IOS) && !BUILDFLAG(IS_ANDROID)
+
+#if BUILDFLAG(IS_ANDROID)
+  registry->RegisterBooleanPref(kDownstreamJavascriptOptimizerSettingAlreadyWorkedAroundPref, false);
+#endif // BUILDFLAG(IS_ANDROID)
 }
 
 PrefProvider::PrefProvider(PrefService* prefs,
@@ -459,6 +477,13 @@ void PrefProvider::DiscardOrMigrateObsoletePreferences() {
   // TODO(https://crbug.com/367181093): clean this up.
   prefs_->ClearPref(kBug364820109AlreadyWorkedAroundPref);
 #endif  // !BUILDFLAG(IS_IOS) && !BUILDFLAG(IS_ANDROID)
+	//
+#if BUILDFLAG(IS_ANDROID)
+  if (!prefs_->GetBoolean(kDownstreamJavascriptOptimizerSettingAlreadyWorkedAroundPref)) {
+    prefs_->ClearPref(kDownstreamJavascriptOptimizerSettingToClear);
+    prefs_->SetBoolean(kDownstreamJavascriptOptimizerSettingAlreadyWorkedAroundPref, true);
+  }
+#endif // BUILDFLAG(IS_ANDROID)
 }
 
 void PrefProvider::MigrateGeolocationExceptions() {

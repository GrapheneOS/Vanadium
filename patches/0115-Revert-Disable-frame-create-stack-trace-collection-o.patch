From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: fgei <fgei@gmail.com>
Date: Fri, 4 Aug 2023 13:17:56 +0000
Subject: [PATCH] Revert "Disable frame create stack trace collection on
 problematic platforms."

This reverts commit 4d5159f5bbfc1aa1f71664e1dcd0bf942c4ea12e.
---
 content/renderer/render_frame_impl.cc | 17 +++++++++--------
 1 file changed, 9 insertions(+), 8 deletions(-)

diff --git a/content/renderer/render_frame_impl.cc b/content/renderer/render_frame_impl.cc
index 5ffcb5a95c328..41dee1bb20040 100644
--- a/content/renderer/render_frame_impl.cc
+++ b/content/renderer/render_frame_impl.cc
@@ -1493,8 +1493,7 @@ RenderFrameImpl* RenderFrameImpl::CreateMainFrame(
 
   CHECK(!render_frame->in_frame_tree_);
   render_frame->in_frame_tree_ = true;
-#if !((BUILDFLAG(IS_ANDROID) && defined(ARCH_CPU_ARM32)) || \
-      (BUILDFLAG(IS_CHROMEOS) && defined(ARCH_CPU_ARM64)))
+#if !defined(ARCH_CPU_ARM64)
   render_frame->added_to_frame_tree_stack_trace_.emplace();
 #endif
   render_frame->Initialize(nullptr);
@@ -1606,8 +1605,7 @@ void RenderFrameImpl::CreateFrame(
     // call to createLocalChild.
     CHECK(!render_frame->in_frame_tree_);
     render_frame->in_frame_tree_ = true;
-#if !((BUILDFLAG(IS_ANDROID) && defined(ARCH_CPU_ARM32)) || \
-      (BUILDFLAG(IS_CHROMEOS) && defined(ARCH_CPU_ARM64)))
+#if !defined(ARCH_CPU_ARM64)
     render_frame->added_to_frame_tree_stack_trace_.emplace();
 #endif
   } else {
@@ -2164,6 +2162,10 @@ void RenderFrameImpl::Delete(
       // main frame when a commit (and ownership transfer) is imminent.
       // TODO(dcheng): This is the case of https://crbug.com/838348.
       DCHECK(is_main_frame_);
+      // This check is not enabled on Android, since it was previously much
+      // easier to trigger this race there, and it's still unclear what's
+      // causing the new race.
+#if !BUILDFLAG(IS_ANDROID)
       if (in_frame_tree_) {
         // This remote should always be non-null when intent ==
         // kSpeculativeMainFrameForNavigationCancelled.
@@ -2190,6 +2192,7 @@ void RenderFrameImpl::Delete(
         // No need to signal anything; only failure is signalled.
         helper.reset();
       }
+#endif  // !BUILDFLAG(IS_ANDROID)
       break;
   }
 
@@ -3569,8 +3572,7 @@ blink::WebLocalFrame* RenderFrameImpl::CreateChildFrame(
 
   CHECK(!child_render_frame->in_frame_tree_);
   child_render_frame->in_frame_tree_ = true;
-#if !((BUILDFLAG(IS_ANDROID) && defined(ARCH_CPU_ARM32)) || \
-      (BUILDFLAG(IS_CHROMEOS) && defined(ARCH_CPU_ARM64)))
+#if !defined(ARCH_CPU_ARM64)
   child_render_frame->added_to_frame_tree_stack_trace_.emplace();
 #endif
   child_render_frame->Initialize(/*parent=*/GetWebFrame());
@@ -5077,8 +5079,7 @@ bool RenderFrameImpl::SwapIn(WebFrame* previous_web_frame) {
 
   CHECK(!in_frame_tree_);
   in_frame_tree_ = true;
-#if !((BUILDFLAG(IS_ANDROID) && defined(ARCH_CPU_ARM32)) || \
-      (BUILDFLAG(IS_CHROMEOS) && defined(ARCH_CPU_ARM64)))
+#if !defined(ARCH_CPU_ARM64)
   added_to_frame_tree_stack_trace_.emplace();
 #endif
 

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: fgei <fgei@gmail.com>
Date: Mon, 25 Sep 2023 09:26:57 +0000
Subject: [PATCH] Disable newer privacy sandbox features by default

---
 components/privacy_sandbox/privacy_sandbox_features.cc | 2 +-
 third_party/blink/common/features.cc                   | 6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/components/privacy_sandbox/privacy_sandbox_features.cc b/components/privacy_sandbox/privacy_sandbox_features.cc
index 975ee59931eeb..d71f0f502d2b7 100644
--- a/components/privacy_sandbox/privacy_sandbox_features.cc
+++ b/components/privacy_sandbox/privacy_sandbox_features.cc
@@ -24,7 +24,7 @@ const base::FeatureParam<bool> kPrivacySandboxAdsNoticeCCTIncludeModeB{
 
 BASE_FEATURE(kPrivacySandboxSettings4,
              "PrivacySandboxSettings4",
-             base::FEATURE_ENABLED_BY_DEFAULT);
+             base::FEATURE_DISABLED_BY_DEFAULT);
 
 const char kPrivacySandboxSettings4ConsentRequiredName[] = "consent-required";
 const char kPrivacySandboxSettings4NoticeRequiredName[] = "notice-required";
diff --git a/third_party/blink/common/features.cc b/third_party/blink/common/features.cc
index 46bd3fa71b397..2f7455e7b9c69 100644
--- a/third_party/blink/common/features.cc
+++ b/third_party/blink/common/features.cc
@@ -349,7 +349,7 @@ BASE_FEATURE(kBoostNonRenderBlockingStyleLoadingTaskPriority,
 // Kill switch for the Topics API.
 BASE_FEATURE(kBrowsingTopics,
              "BrowsingTopics",
-             base::FEATURE_ENABLED_BY_DEFAULT);
+             base::FEATURE_DISABLED_BY_DEFAULT);
 
 // If enabled, the check for whether the IP address is publicly routable will be
 // bypassed when determining the eligibility for a page to be included in topics
@@ -365,13 +365,13 @@ BASE_FEATURE(kBrowsingTopicsBypassIPIsPubliclyRoutableCheck,
 // is enabled.)
 BASE_FEATURE(kBrowsingTopicsDocumentAPI,
              "BrowsingTopicsDocumentAPI",
-             base::FEATURE_ENABLED_BY_DEFAULT);
+             base::FEATURE_DISABLED_BY_DEFAULT);
 
 // Decoupled with the main `kBrowsingTopics` feature, so it allows us to
 // decouple the server side configs.
 BASE_FEATURE(kBrowsingTopicsParameters,
              "BrowsingTopicsParameters",
-             base::FEATURE_ENABLED_BY_DEFAULT);
+             base::FEATURE_DISABLED_BY_DEFAULT);
 // The number of epochs from where to calculate the topics to give to a
 // requesting contexts.
 const base::FeatureParam<int> kBrowsingTopicsNumberOfEpochsToExpose{

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: fgei <fgei@gmail.com>
Date: Wed, 12 Jun 2024 16:15:42 +0000
Subject: [PATCH] Match skipping compatibility check default value checks in
 java as well

---
 .../autofill/options/AutofillOptionsMediator.java   | 13 +++++++++++++
 .../browser/ui/autofill/autofill_client_provider.cc |  6 +++++-
 2 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/chrome/browser/autofill/android/java/src/org/chromium/chrome/browser/autofill/options/AutofillOptionsMediator.java b/chrome/browser/autofill/android/java/src/org/chromium/chrome/browser/autofill/options/AutofillOptionsMediator.java
index 2a416db803b9c..26cd80c7c47f8 100644
--- a/chrome/browser/autofill/android/java/src/org/chromium/chrome/browser/autofill/options/AutofillOptionsMediator.java
+++ b/chrome/browser/autofill/android/java/src/org/chromium/chrome/browser/autofill/options/AutofillOptionsMediator.java
@@ -129,6 +129,13 @@ class AutofillOptionsMediator implements ModalDialogProperties.Controller {
         if (prefs().getBoolean(Pref.AUTOFILL_USING_VIRTUAL_VIEW_STRUCTURE)) {
             return false; // Always allow to flip back to built-in password management.
         }
+        final String skipCompatCheckParamValue =
+                ChromeFeatureList.getFieldTrialParamByFeature(
+                        ChromeFeatureList.AUTOFILL_VIRTUAL_VIEW_STRUCTURE_ANDROID,
+                        SKIP_COMPATIBILITY_CHECK_PARAM_NAME);
+        final boolean skipCompatCheckParamValueIsEmpty = skipCompatCheckParamValue == null
+                || skipCompatCheckParamValue.isEmpty() || skipCompatCheckParamValue.isBlank();
+        final boolean isReadOnlyByDefault = false;
         switch (AutofillClientProviderUtils.getAndroidAutofillFrameworkAvailability(prefs())) {
             case AndroidAutofillAvailabilityStatus.NOT_ALLOWED_BY_POLICY:
                 return true;
@@ -139,11 +146,17 @@ class AutofillOptionsMediator implements ModalDialogProperties.Controller {
             case AndroidAutofillAvailabilityStatus.ANDROID_AUTOFILL_MANAGER_NOT_AVAILABLE:
             case AndroidAutofillAvailabilityStatus.ANDROID_AUTOFILL_NOT_SUPPORTED:
             case AndroidAutofillAvailabilityStatus.UNKNOWN_ANDROID_AUTOFILL_SERVICE:
+                if (skipCompatCheckParamValueIsEmpty) {
+                    return isReadOnlyByDefault;
+                }
                 return !SKIP_ALL_CHECKS_PARAM_VALUE.equals(
                         ChromeFeatureList.getFieldTrialParamByFeature(
                                 ChromeFeatureList.AUTOFILL_VIRTUAL_VIEW_STRUCTURE_ANDROID,
                                 SKIP_COMPATIBILITY_CHECK_PARAM_NAME));
             case AndroidAutofillAvailabilityStatus.ANDROID_AUTOFILL_SERVICE_IS_GOOGLE:
+                if (skipCompatCheckParamValueIsEmpty) {
+                    return isReadOnlyByDefault;
+                }
                 return !SKIP_ALL_CHECKS_PARAM_VALUE.equals(
                                 ChromeFeatureList.getFieldTrialParamByFeature(
                                         ChromeFeatureList.AUTOFILL_VIRTUAL_VIEW_STRUCTURE_ANDROID,
diff --git a/chrome/browser/ui/autofill/autofill_client_provider.cc b/chrome/browser/ui/autofill/autofill_client_provider.cc
index d65a240c06493..77727168a40a9 100644
--- a/chrome/browser/ui/autofill/autofill_client_provider.cc
+++ b/chrome/browser/ui/autofill/autofill_client_provider.cc
@@ -85,7 +85,11 @@ bool UsesVirtualViewStructureForAutofill(PrefService& prefs) {
 }  // namespace
 
 AutofillClientProvider::AutofillClientProvider(PrefService* prefs)
-    : uses_platform_autofill_(UsesVirtualViewStructureForAutofill(*prefs)) {
+    : uses_platform_autofill_(UsesVirtualViewStructureForAutofill(*prefs)
+#if BUILDFLAG(IS_ANDROID)
+        && prefs->GetBoolean(prefs::kAutofillUsingVirtualViewStructure)
+#endif // BUILDFLAG(IS_ANDROID)
+    ) {
 #if BUILDFLAG(IS_ANDROID)
   RecordWhetherAndroidPrefResets(*prefs, uses_platform_autofill_);
   // Ensure the pref is reset if platform autofill is restricted.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: fgei <fgei@gmail.com>
Date: Tue, 30 Apr 2024 14:40:28 +0000
Subject: [PATCH] Add support for conditional content filtering component based
 on language settings

---
 chrome/android/chrome_ext_deps.gni            |  1 +
 .../browser/ChromeApplicationImplHooks.java   | 47 +++++++++++++++++++
 2 files changed, 48 insertions(+)

diff --git a/chrome/android/chrome_ext_deps.gni b/chrome/android/chrome_ext_deps.gni
index a289a6fecd9fb..522092c9820ce 100644
--- a/chrome/android/chrome_ext_deps.gni
+++ b/chrome/android/chrome_ext_deps.gni
@@ -4,6 +4,7 @@
 
 chrome_ext_deps = [
   "//chrome/browser/subresource_filter/android:java",
+  "//vanadium/android_config/proto:browser_config_parser_java",
 ]
 
 chrome_ext_srcjar_deps = [
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/ChromeApplicationImplHooks.java b/chrome/android/java/src/org/chromium/chrome/browser/ChromeApplicationImplHooks.java
index a445c2b87e4fe..af5d46d83a725 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/ChromeApplicationImplHooks.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/ChromeApplicationImplHooks.java
@@ -2,16 +2,63 @@ package org.chromium.chrome.browser;
 
 import android.content.res.Configuration;
 
+import org.chromium.base.LocaleUtils;
+import org.chromium.chrome.browser.base.SplitCompatApplication;
+import org.chromium.chrome.browser.language.settings.LanguageItem;
+import org.chromium.chrome.browser.language.settings.LanguagesManager;
+import org.chromium.chrome.browser.profiles.ProfileManager;
+import org.chromium.chrome.browser.subresource_filter.RulesetUpdater;
+
+import java.util.List;
+import java.util.stream.Collectors;
+
+import app.vanadium.config.VanadiumConfConditionals;
+import app.vanadium.config.VanadiumConfConditionals.ConditionSupplier;
+import app.vanadium.config.proto.VanadiumConfigProto.Component.ComponentCondition;
+
 final class ChromeApplicationImplHooks {
 
     private static final String TAG = "ChromeApplicationImplHooks";
 
     public static void postAttachBaseContext() {
+        if (!SplitCompatApplication.isBrowserProcess()) {
+            return;
+        }
+
+        VanadiumConfConditionals.setBrowserConditionals(new ConditionSupplier() {
+            private List<String> getUserAcceptLanguageForSites()  {
+                return LanguagesManager.getForProfile(
+                            ProfileManager.getLastUsedRegularProfile())
+                        .getUserAcceptLanguageItems().stream()
+                        .map(LanguageItem::getCode)
+                        .collect(Collectors.toList());
+            }
+
+            @Override
+            public boolean isUserAcceptLanguageIncluded(ComponentCondition componentCondition) {
+                String conditionalLanguageTag = componentCondition.getLanguage();
+                String conditionalBaseLanguageTag =
+                        LocaleUtils.toBaseLanguage(conditionalLanguageTag);
+                boolean isConditionBaseLanguageCode =
+                        conditionalBaseLanguageTag.equals(conditionalLanguageTag);
+                return getUserAcceptLanguageForSites().stream().anyMatch(curLanguageTag -> {
+                    if (!isConditionBaseLanguageCode) {
+                        return conditionalLanguageTag.equals(curLanguageTag);
+                    }
+                    return LocaleUtils.isBaseLanguageEqual(curLanguageTag, conditionalLanguageTag);
+                });
+            }
+        });
     }
 
     public static void onCreate() {
     }
 
     public static void onConfigurationChanged(Configuration newConfig) {
+        if (!SplitCompatApplication.isBrowserProcess()) {
+            return;
+        }
+
+        RulesetUpdater.update(/* ignoreVersionCheck */ true);
     }
 }

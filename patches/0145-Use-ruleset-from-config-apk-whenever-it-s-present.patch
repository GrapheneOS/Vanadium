From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: fgei <fgei@gmail.com>
Date: Thu, 7 Dec 2023 08:29:57 +0000
Subject: [PATCH] Use ruleset from config apk whenever it's present

---
 .../android/subresource_filter_android.gni        |  3 +++
 .../content/shared/browser/ruleset_service.cc     |  8 ++++++++
 .../browser/unindexed_ruleset_stream_generator.cc | 15 +++++++++++++++
 3 files changed, 26 insertions(+)

diff --git a/components/subresource_filter/android/subresource_filter_android.gni b/components/subresource_filter/android/subresource_filter_android.gni
index b0e9583bf84af..b3a33697d2a89 100644
--- a/components/subresource_filter/android/subresource_filter_android.gni
+++ b/components/subresource_filter/android/subresource_filter_android.gni
@@ -6,12 +6,15 @@ subresource_filter_android_cc_sources = [
 ]
 
 subresource_filter_android_cc_deps = [
+  "//components/subresource_filter/android_config:android",
+  "//components/subresource_filter/android_config:subresource_filter_fetching_jni_headers",
 ]
 
 subresource_filter_android_java_sources = [
 ]
 
 subresource_filter_android_java_deps = [
+  "//components/subresource_filter/android_config:java",
 ]
 
 subresource_filter_android_java_srcjar_deps = [
diff --git a/components/subresource_filter/content/shared/browser/ruleset_service.cc b/components/subresource_filter/content/shared/browser/ruleset_service.cc
index a194bf0d715e9..a918af3f744e4 100644
--- a/components/subresource_filter/content/shared/browser/ruleset_service.cc
+++ b/components/subresource_filter/content/shared/browser/ruleset_service.cc
@@ -24,6 +24,9 @@
 #include "base/trace_event/traced_value.h"
 #include "components/prefs/pref_registry_simple.h"
 #include "components/prefs/pref_service.h"
+#if BUILDFLAG(IS_ANDROID)
+#include "components/subresource_filter/android_config/subresource_filter_fetching.h"
+#endif // BUILDFLAG(IS_ANDROID)
 #include "components/subresource_filter/content/shared/browser/ruleset_publisher_impl.h"
 #include "components/subresource_filter/content/shared/browser/unindexed_ruleset_stream_generator.h"
 #include "components/subresource_filter/core/browser/copying_file_stream.h"
@@ -241,7 +244,12 @@ void RulesetService::IndexAndStoreAndPublishRulesetIfNeeded(
   if (most_recently_indexed_version.IsCurrentFormatVersion() &&
       most_recently_indexed_version.content_version ==
           unindexed_ruleset_info.content_version) {
+#if BUILDFLAG(IS_ANDROID)
+    if (!subresource_filter::IsInitialized())
+      return;
+#else
     return;
+#endif // BUILDFLAG(IS_ANDROID)
   }
 
   // Before initialization, retain information about the most recently supplied
diff --git a/components/subresource_filter/content/shared/browser/unindexed_ruleset_stream_generator.cc b/components/subresource_filter/content/shared/browser/unindexed_ruleset_stream_generator.cc
index 11f98643d5784..337ecdef4d58a 100644
--- a/components/subresource_filter/content/shared/browser/unindexed_ruleset_stream_generator.cc
+++ b/components/subresource_filter/content/shared/browser/unindexed_ruleset_stream_generator.cc
@@ -9,6 +9,9 @@
 #include "base/files/file_path.h"
 #include "components/subresource_filter/core/browser/copying_file_stream.h"
 #include "components/subresource_filter/core/browser/ruleset_version.h"
+#if BUILDFLAG(IS_ANDROID)
+#include "components/subresource_filter/android_config/subresource_filter_fetching.h"
+#endif // BUILDFLAG(IS_ANDROID)
 #include "third_party/protobuf/src/google/protobuf/io/zero_copy_stream_impl.h"
 #include "third_party/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.h"
 #include "ui/base/resource/resource_bundle.h"
@@ -19,11 +22,23 @@ UnindexedRulesetStreamGenerator::UnindexedRulesetStreamGenerator(
     const UnindexedRulesetInfo& ruleset_info) {
   bool has_ruleset_file = !ruleset_info.ruleset_path.empty();
 
+#if BUILDFLAG(IS_ANDROID)
+  std::string unindexed_ruleset_data_as_str = subresource_filter::GetUnindexedRulesetData();
+  DCHECK(has_ruleset_file || ruleset_info.resource_id || unindexed_ruleset_data_as_str.size() != 0);
+#else
   DCHECK(has_ruleset_file || ruleset_info.resource_id);
   DCHECK(!(has_ruleset_file && ruleset_info.resource_id));
+#endif // BUILDFLAG(IS_ANDROID)
 
   if (has_ruleset_file) {
     GenerateStreamFromFile(ruleset_info.ruleset_path);
+#if BUILDFLAG(IS_ANDROID)
+  } else if (unindexed_ruleset_data_as_str.size() != 0) {
+    ruleset_size_ = unindexed_ruleset_data_as_str.size();
+    string_stream_.str(unindexed_ruleset_data_as_str);
+    ruleset_stream_ = std::make_unique<google::protobuf::io::IstreamInputStream>(
+        &string_stream_);
+#endif // BUILDFLAG(IS_ANDROID)
   } else {
     GenerateStreamFromResourceId(ruleset_info.resource_id);
   }

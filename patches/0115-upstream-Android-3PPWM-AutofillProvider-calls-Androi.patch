From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Friedrich Horschig <fhorschig@chromium.org>
Date: Mon, 26 Feb 2024 08:15:31 +0000
Subject: [PATCH] upstream: [Android][3PPWM] AutofillProvider calls Android
 Autofill for Chrome Tabs

Use the AutofillProvider (formerly used for WebView only) to
respond to Android Autofill API calls:
* onProvideAutofillVirtualStructure() forwards the current Form
  to the AutofillService configured in Android settings
* autofill() hands filling values over to the driver for Filling

Test with https://crrev.com/c/5314306 to prevent that Chrome
Autofill hooks try to call (intentionally) unimplemented
Autofill Client methods.

Feature Guard: AutofillVirtualViewStructureAndroid
Context: go/3ppwm-dd
Result after https://crrev.com/c/5314306:
go/scrcast/NDY4MzczODQzNzkxMDUyOHwwZjVlNmE5NC1lMA

Verified with a couple of providers (BW, GPM, DL, RF)

Bug: 326231439
Change-Id: Ib62b31b6c4ff82bcb4878e0a78a8973aa60e448e
Binary-Size: Uses large feature that was WebView-only before.
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5173252
Reviewed-by: Michael Thiessen <mthiesse@chromium.org>
Reviewed-by: Jinsuk Kim <jinsukkim@chromium.org>
Reviewed-by: Jan Keitel <jkeitel@google.com>
Commit-Queue: Friedrich Horschig <fhorschig@chromium.org>
Cr-Commit-Position: refs/heads/main@{#1265081}
---
 chrome/android/BUILD.gn                       |  4 +
 .../src/org/chromium/chrome/browser/tab/DEPS  |  2 +
 .../chromium/chrome/browser/tab/TabImpl.java  | 90 +++++++++++++++++++
 .../browser/tab/TabViewAndroidDelegate.java   | 18 ++++
 .../src/org/chromium/chrome/browser/tab/DEPS  |  3 +
 .../chrome/browser/tab/TabUnitTest.java       | 43 +++++++++
 .../tab/TabViewAndroidDelegateTest.java       | 24 +++++
 chrome/browser/BUILD.gn                       |  1 +
 chrome/browser/android/DEPS                   |  1 +
 chrome/browser/android/tab_android.cc         | 29 ++++++
 chrome/browser/android/tab_android.h          |  1 +
 chrome/browser/tab/BUILD.gn                   |  1 +
 .../embedder_support/view/ContentView.java    | 25 ++++--
 .../view/ContentViewTest.java                 | 28 ++++++
 .../chromium/ui/base/ViewAndroidDelegate.java | 26 ++++++
 15 files changed, 290 insertions(+), 6 deletions(-)
 create mode 100644 chrome/android/junit/src/org/chromium/chrome/browser/tab/DEPS

diff --git a/chrome/android/BUILD.gn b/chrome/android/BUILD.gn
index fec47e97f8fe6..b9b421811e2f8 100644
--- a/chrome/android/BUILD.gn
+++ b/chrome/android/BUILD.gn
@@ -472,6 +472,8 @@ if (current_toolchain == default_toolchain) {
       "//chrome/browser/xsurface:java",
       "//chrome/browser/xsurface_provider:dependency_provider_impl_java",
       "//chrome/browser/xsurface_provider:java",
+      "//components/android_autofill/browser:java",
+      "//components/autofill/android:autofill_features_java",
       "//components/autofill/android:autofill_java",
       "//components/background_task_scheduler:background_task_scheduler_java",
       "//components/background_task_scheduler:background_task_scheduler_task_ids_java",
@@ -838,6 +840,7 @@ if (current_toolchain == default_toolchain) {
       "//chrome/browser/ui/android/fast_checkout/internal:java",
       "//chrome/browser/ui/android/hats/internal:java",
       "//chrome/browser/ui/android/webid/internal:java",
+      "//components/android_autofill/browser:java",
       "//components/autofill/android:payments_autofill_java",
       "//components/browser_ui/bottomsheet/android/internal:java",
       "//components/data_sharing/internal:internal_java",
@@ -1133,6 +1136,7 @@ if (current_toolchain == default_toolchain) {
       "//chrome/browser/xsurface_provider:junit",
       "//chrome/test:sync_integration_test_support_java",
       "//chrome/test/android:chrome_java_unit_test_support",
+      "//components/android_autofill/browser:java",
       "//components/autofill/android:autofill_features_java",
       "//components/autofill/android:main_autofill_java",
       "//components/autofill/android:payments_autofill_java",
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/tab/DEPS b/chrome/android/java/src/org/chromium/chrome/browser/tab/DEPS
index 69db0d2a59261..e91d0c8327286 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/tab/DEPS
+++ b/chrome/android/java/src/org/chromium/chrome/browser/tab/DEPS
@@ -93,6 +93,8 @@ specific_include_rules = {
     "+chrome/browser/util/android/java/src/org/chromium/chrome/browser/util/UrlConstants.java",
 
     "-components",
+    "+components/android_autofill/browser/java/src/org/chromium/components/autofill/AndroidAutofillFeatures.java",
+    "+components/android_autofill/browser/java/src/org/chromium/components/autofill/AutofillProvider.java",
     "+components/dom_distiller/core/android/java/src/org/chromium/components/dom_distiller/core/DomDistillerUrlUtils.java",
     "+components/embedder_support/android/java/src/org/chromium/components/embedder_support/delegate",
     "+components/embedder_support/android/java/src/org/chromium/components/embedder_support/util",
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/tab/TabImpl.java b/chrome/android/java/src/org/chromium/chrome/browser/tab/TabImpl.java
index 4fca840ad3a78..eac1deb501bf2 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/tab/TabImpl.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/tab/TabImpl.java
@@ -10,9 +10,12 @@ import android.content.Context;
 import android.graphics.Rect;
 import android.net.Uri;
 import android.text.TextUtils;
+import android.util.SparseArray;
 import android.view.View;
 import android.view.View.OnAttachStateChangeListener;
+import android.view.ViewStructure;
 import android.view.accessibility.AccessibilityEvent;
+import android.view.autofill.AutofillValue;
 
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
@@ -54,6 +57,8 @@ import org.chromium.chrome.browser.tab.Tab.LoadUrlResult;
 import org.chromium.chrome.browser.tab.TabUtils.UseDesktopUserAgentCaller;
 import org.chromium.chrome.browser.ui.native_page.FrozenNativePage;
 import org.chromium.chrome.browser.ui.native_page.NativePage;
+import org.chromium.components.autofill.AutofillFeatures;
+import org.chromium.components.autofill.AutofillProvider;
 import org.chromium.components.dom_distiller.core.DomDistillerUrlUtils;
 import org.chromium.components.embedder_support.util.UrlConstants;
 import org.chromium.components.embedder_support.view.ContentView;
@@ -115,6 +120,8 @@ class TabImpl implements Tab {
     /** The view provided by {@link TabViewManager} to be shown on top of Content view. */
     private View mCustomView;
 
+    AutofillProvider mAutofillProvider;
+
     /**
      * The {@link TabViewManager} associated with this Tab that is responsible for managing custom
      * views.
@@ -1095,6 +1102,46 @@ class TabImpl implements Tab {
         return mWebContentsDelegate;
     }
 
+    // Forwarded from TabViewAndroidDelegate.
+
+    /**
+     * Implementation of the {@link View#onProvideAutofillVirtualStructure(ViewStructure, int)}
+     * method for this tab. Noop if {@link AutofillProvider} isn't used on this tab.
+     *
+     * @see View#onProvideAutofillVirtualStructure(ViewStructure structure, int flags)
+     * @see ViewAndroidDelegate#onProvideAutofillVirtualStructure(ViewStructure structure, int
+     *     flags)
+     */
+    void onProvideAutofillVirtualStructure(ViewStructure structure, int flags) {
+        if (mAutofillProvider != null) {
+            mAutofillProvider.onProvideAutoFillVirtualStructure(structure, flags);
+        }
+    }
+
+    /**
+     * Implementation of the {@link View#autofill(SparseArray))} method for this tab. Noop if {@link
+     * AutofillProvider} isn't used on this tab.
+     *
+     * @see View#autofill(SparseArray)
+     * @see ViewAndroidDelegate#autofill(SparseArray)
+     */
+    void autofill(final SparseArray<AutofillValue> values) {
+        if (mAutofillProvider != null) {
+            mAutofillProvider.autofill(values);
+        }
+    }
+
+    /**
+     * Check whether the platform can request a ViewStructure.
+     *
+     * @return iff the AutofillProvider should provide a ViewStructure when prompted.
+     */
+    boolean providesAutofillStructure() {
+        // TODO(b/326231439): Check pref and AutofillService!
+        return ChromeFeatureList.isEnabled(
+                AutofillFeatures.AUTOFILL_VIRTUAL_VIEW_STRUCTURE_ANDROID);
+    }
+
     // Forwarded from TabWebContentsDelegateAndroid.
 
     /**
@@ -1521,6 +1568,10 @@ class TabImpl implements Tab {
                                     this));
 
             mWebContents.notifyRendererPreferenceUpdate();
+            mContentView.setImportantForAutofill(
+                    prepareAutofillProvider(webContents)
+                            ? View.IMPORTANT_FOR_AUTOFILL_YES
+                            : View.IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS);
             TabHelpers.initWebContentsHelpers(this);
             notifyContentChanged();
         } finally {
@@ -1705,6 +1756,33 @@ class TabImpl implements Tab {
         return restored;
     }
 
+    /**
+     * Initializes the {@link AutofillProvider} so that it can provide a ViewStructure for the given
+     * WebContents. If the provider existed already, it's only assigned the new WebContents.
+     *
+     * @param newWebContents The webcontents to prepare the provider for.
+     * @return true if the the provider is available for the given WebContents.
+     */
+    private boolean prepareAutofillProvider(WebContents newWebContents) {
+        if (!providesAutofillStructure()) {
+            mAutofillProvider = null;
+            return false; // Autofill provider can't be prepared.
+        }
+        if (mAutofillProvider != null) {
+            mAutofillProvider.setWebContents(newWebContents);
+            return true; // Provider already existed. Swapping contents suffices.
+        }
+        // TODO(b/326233923): Call selectionController.setNonSelectionActionModeCallback?
+        mAutofillProvider =
+                new AutofillProvider(
+                        getContext(),
+                        mContentView,
+                        newWebContents,
+                        getContext().getString(R.string.app_name));
+        TabImplJni.get().initializeAutofillIfNecessary(mNativeTabAndroid);
+        return true;
+    }
+
     @CalledByNative
     @Override
     public boolean isCustomTab() {
@@ -1782,6 +1860,11 @@ class TabImpl implements Tab {
         mWebContentsState = webContentsState;
     }
 
+    @VisibleForTesting
+    void setAutofillProvider(AutofillProvider autofillProvider) {
+        mAutofillProvider = autofillProvider;
+    }
+
     @VisibleForTesting
     protected void setTitle(String title) {
         mTitle = title;
@@ -1849,6 +1932,11 @@ class TabImpl implements Tab {
     private final void destroyWebContents(boolean deleteNativeWebContents) {
         if (mWebContents == null) return;
 
+        if (mAutofillProvider != null) {
+            mAutofillProvider.destroy();
+            mAutofillProvider = null;
+        }
+
         mContentView.removeOnAttachStateChangeListener(mAttachStateChangeListener);
         mContentView = null;
         updateInteractableState();
@@ -1973,6 +2061,8 @@ class TabImpl implements Tab {
                 TabWebContentsDelegateAndroidImpl delegate,
                 ContextMenuPopulatorFactory contextMenuPopulatorFactory);
 
+        void initializeAutofillIfNecessary(long nativeTabAndroid);
+
         void updateDelegates(
                 long nativeTabAndroid,
                 TabWebContentsDelegateAndroidImpl delegate,
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/tab/TabViewAndroidDelegate.java b/chrome/android/java/src/org/chromium/chrome/browser/tab/TabViewAndroidDelegate.java
index d5e0e3e9237ed..8d0790b76f345 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/tab/TabViewAndroidDelegate.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/tab/TabViewAndroidDelegate.java
@@ -4,7 +4,10 @@
 
 package org.chromium.chrome.browser.tab;
 
+import android.util.SparseArray;
 import android.view.ViewGroup;
+import android.view.ViewStructure;
+import android.view.autofill.AutofillValue;
 
 import androidx.annotation.Nullable;
 
@@ -160,6 +163,21 @@ public class TabViewAndroidDelegate extends ViewAndroidDelegate {
         }
     }
 
+    @Override
+    public void onProvideAutofillVirtualStructure(ViewStructure structure, int flags) {
+        mTab.onProvideAutofillVirtualStructure(structure, flags);
+    }
+
+    @Override
+    public void autofill(final SparseArray<AutofillValue> values) {
+        mTab.autofill(values);
+    }
+
+    @Override
+    public boolean providesAutofillStructure() {
+        return mTab.providesAutofillStructure();
+    }
+
     DragAndDropBrowserDelegate getDragAndDropBrowserDelegateForTesting() {
         return mDragAndDropBrowserDelegate;
     }
diff --git a/chrome/android/junit/src/org/chromium/chrome/browser/tab/DEPS b/chrome/android/junit/src/org/chromium/chrome/browser/tab/DEPS
new file mode 100644
index 0000000000000..3d169603dcd08
--- /dev/null
+++ b/chrome/android/junit/src/org/chromium/chrome/browser/tab/DEPS
@@ -0,0 +1,3 @@
+include_rules = [
+  "+components/android_autofill/browser/java/src/org/chromium/components/autofill/AutofillProvider.java"
+]
diff --git a/chrome/android/junit/src/org/chromium/chrome/browser/tab/TabUnitTest.java b/chrome/android/junit/src/org/chromium/chrome/browser/tab/TabUnitTest.java
index 1e466dd03c1f8..3ff7b021b8403 100644
--- a/chrome/android/junit/src/org/chromium/chrome/browser/tab/TabUnitTest.java
+++ b/chrome/android/junit/src/org/chromium/chrome/browser/tab/TabUnitTest.java
@@ -11,15 +11,20 @@ import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNotEquals;
 import static org.junit.Assert.assertNull;
+import static org.junit.Assert.assertTrue;
 import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.ArgumentMatchers.anyInt;
 import static org.mockito.Mockito.doReturn;
+import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.never;
 import static org.mockito.Mockito.verify;
 
 import android.app.Activity;
 import android.content.Context;
+import android.util.SparseArray;
 import android.view.View;
+import android.view.ViewStructure;
+import android.view.autofill.AutofillValue;
 
 import androidx.annotation.Nullable;
 import androidx.test.filters.SmallTest;
@@ -36,10 +41,14 @@ import org.robolectric.annotation.Config;
 import org.chromium.base.Token;
 import org.chromium.base.test.BaseRobolectricTestRunner;
 import org.chromium.base.test.util.Features;
+import org.chromium.base.test.util.Features.DisableFeatures;
+import org.chromium.base.test.util.Features.EnableFeatures;
 import org.chromium.base.test.util.JniMocker;
 import org.chromium.chrome.browser.app.ChromeActivity;
 import org.chromium.chrome.browser.profiles.Profile;
 import org.chromium.chrome.browser.ui.native_page.NativePage;
+import org.chromium.components.autofill.AutofillFeatures;
+import org.chromium.components.autofill.AutofillProvider;
 import org.chromium.content_public.browser.LoadUrlParams;
 import org.chromium.content_public.browser.WebContents;
 import org.chromium.ui.base.WindowAndroid;
@@ -57,6 +66,7 @@ public class TabUnitTest {
 
     @Rule public JniMocker mocker = new JniMocker();
 
+    @Mock private AutofillProvider mAutofillProvider;
     @Mock private Profile mProfile;
     @Mock private WindowAndroid mWindowAndroid;
     @Mock private LoadUrlParams mLoadUrlParams;
@@ -93,6 +103,7 @@ public class TabUnitTest {
                     }
                 };
         mTab.addObserver(mObserver);
+        mTab.setAutofillProvider(mAutofillProvider);
     }
 
     @Test
@@ -241,4 +252,36 @@ public class TabUnitTest {
         assertFalse(mTab.maybeShowNativePage(null, /* forceReload= */ false));
         assertFalse(mTab.maybeShowNativePage("", /* forceReload= */ false));
     }
+
+    @Test
+    @SmallTest
+    @DisableFeatures({AutofillFeatures.AUTOFILL_VIRTUAL_VIEW_STRUCTURE_ANDROID})
+    public void testAutofillUnavailable() {
+        assertFalse(mTab.providesAutofillStructure());
+        mTab.setAutofillProvider(null);
+
+        mTab.onProvideAutofillVirtualStructure(mock(ViewStructure.class), 0);
+        verify(mAutofillProvider, never()).onProvideAutoFillVirtualStructure(any(), anyInt());
+
+        mTab.autofill(new SparseArray<AutofillValue>());
+        verify(mAutofillProvider, never()).autofill(any());
+    }
+
+    @Test
+    @SmallTest
+    @EnableFeatures({AutofillFeatures.AUTOFILL_VIRTUAL_VIEW_STRUCTURE_ANDROID})
+    public void testAutofillRequestsHandledByProvider() {
+        assertTrue(mTab.providesAutofillStructure());
+
+        ViewStructure structure = mock(ViewStructure.class);
+        mTab.onProvideAutofillVirtualStructure(
+                structure, View.AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS);
+        verify(mAutofillProvider)
+                .onProvideAutoFillVirtualStructure(
+                        structure, View.AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS);
+
+        SparseArray<AutofillValue> values = new SparseArray<AutofillValue>();
+        mTab.autofill(values);
+        verify(mAutofillProvider).autofill(values);
+    }
 }
diff --git a/chrome/android/junit/src/org/chromium/chrome/browser/tab/TabViewAndroidDelegateTest.java b/chrome/android/junit/src/org/chromium/chrome/browser/tab/TabViewAndroidDelegateTest.java
index f99fec5729c68..4991f3bcdb27d 100644
--- a/chrome/android/junit/src/org/chromium/chrome/browser/tab/TabViewAndroidDelegateTest.java
+++ b/chrome/android/junit/src/org/chromium/chrome/browser/tab/TabViewAndroidDelegateTest.java
@@ -7,9 +7,16 @@ package org.chromium.chrome.browser.tab;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertNull;
+import static org.junit.Assert.assertTrue;
+import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.verify;
 import static org.mockito.Mockito.when;
 
+import android.util.SparseArray;
+import android.view.View;
+import android.view.ViewStructure;
+import android.view.autofill.AutofillValue;
+
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
@@ -134,4 +141,21 @@ public class TabViewAndroidDelegateTest {
                 "DragAndDropBrowserDelegate should be removed once destroyed.",
                 mViewAndroidDelegate.getDragAndDropBrowserDelegateForTesting());
     }
+
+    @Test
+    public void testForwardsAndroidAutofillRequests() {
+        when(mTab.providesAutofillStructure()).thenReturn(true);
+        assertTrue(mViewAndroidDelegate.providesAutofillStructure());
+
+        ViewStructure structure = mock(ViewStructure.class);
+        mViewAndroidDelegate.onProvideAutofillVirtualStructure(
+                structure, View.AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS);
+        verify(mTab)
+                .onProvideAutofillVirtualStructure(
+                        structure, View.AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS);
+
+        SparseArray<AutofillValue> values = new SparseArray();
+        mViewAndroidDelegate.autofill(values);
+        verify(mTab).autofill(values);
+    }
 }
diff --git a/chrome/browser/BUILD.gn b/chrome/browser/BUILD.gn
index e9c28ab05bd01..6c2614ef6156b 100644
--- a/chrome/browser/BUILD.gn
+++ b/chrome/browser/BUILD.gn
@@ -3496,6 +3496,7 @@ static_library("browser") {
       "//chrome/common:non_code_constants",
       "//chrome/common/wallet:mojo_bindings",
       "//chrome/services/media_gallery_util/public/cpp",
+      "//components/android_autofill/browser:android",
       "//components/autofill/android:keyboard_suppressor",
       "//components/background_sync",
       "//components/bookmarks/common/android",
diff --git a/chrome/browser/android/DEPS b/chrome/browser/android/DEPS
index 296adeba2a091..cf5953d1bfe5b 100644
--- a/chrome/browser/android/DEPS
+++ b/chrome/browser/android/DEPS
@@ -5,6 +5,7 @@ include_rules = [
   "+cc/slim/layer.h",
   "+chrome/android",
   "+chrome/browser/web_share_target",
+  "+components/android_autofill",
   "+components/browser_ui/site_settings/android",
   "+components/browser_ui/sms/android",
   "+components/browser_ui/util/android/url_constants.h",
diff --git a/chrome/browser/android/tab_android.cc b/chrome/browser/android/tab_android.cc
index 563746d9e9aeb..d02c295383da0 100644
--- a/chrome/browser/android/tab_android.cc
+++ b/chrome/browser/android/tab_android.cc
@@ -22,6 +22,7 @@
 #include "chrome/browser/android/compositor/tab_content_manager.h"
 #include "chrome/browser/android/tab_web_contents_delegate_android.h"
 #include "chrome/browser/browser_about_handler.h"
+#include "chrome/browser/browser_process.h"
 #include "chrome/browser/history/history_service_factory.h"
 #include "chrome/browser/notifications/notification_permission_context.h"
 #include "chrome/browser/profiles/profile.h"
@@ -33,12 +34,19 @@
 #include "chrome/browser/ui/android/context_menu_helper.h"
 #include "chrome/browser/ui/android/tab_model/tab_model.h"
 #include "chrome/browser/ui/android/tab_model/tab_model_list.h"
+#include "chrome/browser/ui/autofill/chrome_autofill_client.h"
 #include "chrome/browser/ui/browser_navigator_params.h"
 #include "chrome/browser/ui/startup/bad_flags_prompt.h"
 #include "chrome/browser/ui/tab_helpers.h"
+#include "components/android_autofill/browser/android_autofill_client.h"
+#include "components/android_autofill/browser/android_autofill_manager.h"
+#include "components/android_autofill/browser/autofill_provider.h"
+#include "components/android_autofill/browser/autofill_provider_android.h"
+#include "components/autofill/content/browser/content_autofill_driver_factory.h"
 #include "components/infobars/content/content_infobar_manager.h"
 #include "components/no_state_prefetch/browser/no_state_prefetch_manager.h"
 #include "components/sessions/content/session_tab_helper.h"
+#include "content/public/browser/browser_thread.h"
 #include "content/public/browser/devtools_agent_host.h"
 #include "content/public/browser/navigation_entry.h"
 #include "content/public/browser/navigation_handle.h"
@@ -347,6 +355,27 @@ void TabAndroid::InitWebContents(
     observer.OnInitWebContents(this);
 }
 
+void TabAndroid::InitializeAutofillIfNecessary(JNIEnv* env) {
+  DCHECK_CURRENTLY_ON(content::BrowserThread::UI);
+  if (autofill::ContentAutofillClient::FromWebContents(web_contents_.get())) {
+    return;
+  }
+  // The AutofillProvider object is already created by the AutofillProvider.
+  if (autofill::AutofillProvider::FromWebContents(web_contents_.get())) {
+    return;
+  }
+  android_autofill::AndroidAutofillClient::CreateForWebContents(
+      web_contents_.get(), [&](const JavaRef<jobject>& client) {});
+
+  // We need to initialize the keyboard suppressor before creating any
+  // AutofillManagers and after the autofill client is available.
+  autofill::AutofillProvider::FromWebContents(web_contents_.get())
+      ->MaybeInitKeyboardSuppressor();
+
+  autofill::ContentAutofillDriverFactory::FromWebContents(web_contents_.get())
+      ->DriverForFrame(web_contents_->GetPrimaryMainFrame());
+}
+
 void TabAndroid::UpdateDelegates(
     JNIEnv* env,
     const JavaParamRef<jobject>& jweb_contents_delegate,
diff --git a/chrome/browser/android/tab_android.h b/chrome/browser/android/tab_android.h
index 86f951b1e30c6..a56061387d3e4 100644
--- a/chrome/browser/android/tab_android.h
+++ b/chrome/browser/android/tab_android.h
@@ -148,6 +148,7 @@ class TabAndroid : public base::SupportsUserData {
       const base::android::JavaParamRef<jobject>& jweb_contents_delegate,
       const base::android::JavaParamRef<jobject>&
           jcontext_menu_populator_factory);
+  void InitializeAutofillIfNecessary(JNIEnv* env);
   void UpdateDelegates(
       JNIEnv* env,
       const base::android::JavaParamRef<jobject>& jweb_contents_delegate,
diff --git a/chrome/browser/tab/BUILD.gn b/chrome/browser/tab/BUILD.gn
index a04970e96ff4e..47ac768c8f6d9 100644
--- a/chrome/browser/tab/BUILD.gn
+++ b/chrome/browser/tab/BUILD.gn
@@ -82,6 +82,7 @@ android_library("java") {
     "//chrome/browser/profiles/android:java",
     "//chrome/browser/ui/android/native_page:java",
     "//chrome/browser/ui/android/strings:ui_strings_grd",
+    "//components/autofill/android:autofill_features_java",
     "//components/browser_ui/util/android:java",
     "//components/commerce/core:proto_java",
     "//components/commerce/core/android:core_java",
diff --git a/components/embedder_support/android/java/src/org/chromium/components/embedder_support/view/ContentView.java b/components/embedder_support/android/java/src/org/chromium/components/embedder_support/view/ContentView.java
index abe1ac2b7907d..33a17dc0e7afc 100644
--- a/components/embedder_support/android/java/src/org/chromium/components/embedder_support/view/ContentView.java
+++ b/components/embedder_support/android/java/src/org/chromium/components/embedder_support/view/ContentView.java
@@ -7,8 +7,8 @@ package org.chromium.components.embedder_support.view;
 import android.content.Context;
 import android.content.res.Configuration;
 import android.graphics.Rect;
-import android.os.Build;
 import android.os.Handler;
+import android.util.SparseArray;
 import android.view.DragEvent;
 import android.view.KeyEvent;
 import android.view.MotionEvent;
@@ -19,6 +19,7 @@ import android.view.View.OnSystemUiVisibilityChangeListener;
 import android.view.ViewGroup.OnHierarchyChangeListener;
 import android.view.ViewStructure;
 import android.view.accessibility.AccessibilityNodeProvider;
+import android.view.autofill.AutofillValue;
 import android.view.inputmethod.EditorInfo;
 import android.view.inputmethod.InputConnection;
 import android.widget.FrameLayout;
@@ -27,7 +28,6 @@ import androidx.annotation.Nullable;
 
 import org.chromium.base.ObserverList;
 import org.chromium.base.TraceEvent;
-import org.chromium.base.compat.ApiHelperForO;
 import org.chromium.components.embedder_support.util.TouchEventFilter;
 import org.chromium.content_public.browser.ImeAdapter;
 import org.chromium.content_public.browser.RenderCoordinates;
@@ -119,10 +119,7 @@ public class ContentView extends FrameLayout
 
         setFocusable(true);
         setFocusableInTouchMode(true);
-
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-            ApiHelperForO.setDefaultFocusHighlightEnabled(this, false);
-        }
+        setDefaultFocusHighlightEnabled(false);
 
         setOnHierarchyChangeListener(this);
         setOnSystemUiVisibilityChangeListener(this);
@@ -594,6 +591,22 @@ public class ContentView extends FrameLayout
         if (wcax != null) wcax.onProvideVirtualStructure(structure, false);
     }
 
+    @Override
+    public void autofill(final SparseArray<AutofillValue> values) {
+        if (mWebContents.getViewAndroidDelegate() != null) {
+            mWebContents.getViewAndroidDelegate().autofill(values);
+        }
+    }
+
+    @Override
+    public void onProvideAutofillVirtualStructure(ViewStructure structure, int flags) {
+        if (mWebContents.getViewAndroidDelegate() != null) {
+            mWebContents
+                    .getViewAndroidDelegate()
+                    .onProvideAutofillVirtualStructure(structure, flags);
+        }
+    }
+
     ///////////////////////////////////////////////////////////////////////////////////////////////
     //              Start Implementation of ViewEventSink.InternalAccessDelegate                 //
     ///////////////////////////////////////////////////////////////////////////////////////////////
diff --git a/components/embedder_support/android/junit/src/org/chromium/components/embedder_support/view/ContentViewTest.java b/components/embedder_support/android/junit/src/org/chromium/components/embedder_support/view/ContentViewTest.java
index 623da37e71da2..689057e94c543 100644
--- a/components/embedder_support/android/junit/src/org/chromium/components/embedder_support/view/ContentViewTest.java
+++ b/components/embedder_support/android/junit/src/org/chromium/components/embedder_support/view/ContentViewTest.java
@@ -9,11 +9,16 @@ import static org.junit.Assert.assertNull;
 import static org.mockito.Mockito.atLeastOnce;
 import static org.mockito.Mockito.mock;
 import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
 import static org.mockito.MockitoAnnotations.openMocks;
 
 import android.content.Context;
+import android.util.SparseArray;
 import android.view.MotionEvent;
 import android.view.PointerIcon;
+import android.view.View;
+import android.view.ViewStructure;
+import android.view.autofill.AutofillValue;
 
 import androidx.test.filters.SmallTest;
 import androidx.test.platform.app.InstrumentationRegistry;
@@ -26,6 +31,7 @@ import org.mockito.Mock;
 import org.chromium.base.test.BaseRobolectricTestRunner;
 import org.chromium.content_public.browser.WebContents;
 import org.chromium.ui.base.EventOffsetHandler;
+import org.chromium.ui.base.ViewAndroidDelegate;
 
 /**
  * Unit tests for ContentView: the view which displays web content in Chrome. Unlike other tests for
@@ -36,6 +42,7 @@ import org.chromium.ui.base.EventOffsetHandler;
 public class ContentViewTest {
     @Mock private EventOffsetHandler.EventOffsetHandlerDelegate mEventOffsetHandlerDelegate;
     @Mock private WebContents mWebContents;
+    @Mock private ViewAndroidDelegate mViewDelegate;
 
     private Context mContext;
     private ContentView mContentView;
@@ -68,4 +75,25 @@ public class ContentViewTest {
         // Parent implementation gets location of motion event.
         verify(motionEvent, atLeastOnce()).getX(0);
     }
+
+    @Test
+    @SmallTest
+    public void testOnProvideAutofillVirtualStructureForwardsToDelegate() {
+        when(mWebContents.getViewAndroidDelegate()).thenReturn(mViewDelegate);
+        ViewStructure structure = mock(ViewStructure.class);
+        mContentView.onProvideAutofillVirtualStructure(
+                structure, View.AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS);
+        verify(mViewDelegate)
+                .onProvideAutofillVirtualStructure(
+                        structure, View.AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS);
+    }
+
+    @Test
+    @SmallTest
+    public void testForwardsAutofillDataToDelegate() {
+        when(mWebContents.getViewAndroidDelegate()).thenReturn(mViewDelegate);
+        SparseArray<AutofillValue> values = new SparseArray();
+        mContentView.autofill(values);
+        verify(mViewDelegate).autofill(values);
+    }
 }
diff --git a/ui/android/java/src/org/chromium/ui/base/ViewAndroidDelegate.java b/ui/android/java/src/org/chromium/ui/base/ViewAndroidDelegate.java
index 99b29f07becf9..3ce47c2415ecc 100644
--- a/ui/android/java/src/org/chromium/ui/base/ViewAndroidDelegate.java
+++ b/ui/android/java/src/org/chromium/ui/base/ViewAndroidDelegate.java
@@ -7,12 +7,15 @@ package org.chromium.ui.base;
 import android.content.ClipData;
 import android.graphics.Bitmap;
 import android.os.Bundle;
+import android.util.SparseArray;
 import android.view.MotionEvent;
 import android.view.PointerIcon;
 import android.view.View;
 import android.view.View.DragShadowBuilder;
 import android.view.ViewGroup;
 import android.view.ViewGroup.MarginLayoutParams;
+import android.view.ViewStructure;
+import android.view.autofill.AutofillValue;
 import android.view.inputmethod.InputConnection;
 
 import androidx.annotation.CallSuper;
@@ -563,6 +566,29 @@ public class ViewAndroidDelegate {
         }
     }
 
+    /**
+     * Forwards requests for a ViewStructure from the Android Autofill API to the implementing View.
+     *
+     * @see View#onProvideAutofillVirtualStructure(ViewStructure structure, int flags)
+     */
+    public void onProvideAutofillVirtualStructure(ViewStructure structure, int flags) {}
+
+    /**
+     * Forwards autofillable values from the Android Autofill API to the implementing View.
+     *
+     * @see View#autofill(SparseArray)
+     */
+    public void autofill(final SparseArray<AutofillValue> values) {}
+
+    /**
+     * Check whether the Android can request a ViewStructure for Autofill.
+     *
+     * @return true iff an AutofillProvider provides a ViewStructure when prompted.
+     */
+    public boolean providesAutofillStructure() {
+        return false;
+    }
+
     /** Destroy and clean up dependencies (e.g. drag state tracker if set). */
     public void destroy() {
         // TODO(https://crbug.com/1297354): Call this in when destroying WebContents.

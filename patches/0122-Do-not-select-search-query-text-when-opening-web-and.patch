From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: fgei <fgei@gmail.com>
Date: Wed, 7 Feb 2024 17:09:24 +0000
Subject: [PATCH] Do not select search query text when opening web and global
 search

---
 .../chrome/browser/LaunchIntentDispatcher.java  |  3 +++
 .../browser/searchwidget/SearchActivity.java    | 17 ++++++++++++++++-
 .../SearchActivityLocationBarLayout.java        | 16 +++++++++++++++-
 3 files changed, 34 insertions(+), 2 deletions(-)

diff --git a/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcher.java b/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcher.java
index c4090888ba4dd..8bb66e1d21b98 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcher.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/LaunchIntentDispatcher.java
@@ -228,6 +228,9 @@ public class LaunchIntentDispatcher {
                 searchActivityIntent.setClass(
                         ContextUtils.getApplicationContext(), SearchActivity.class);
                 searchActivityIntent.putExtra(SearchManager.QUERY, query);
+                searchActivityIntent.putExtra(SearchActivity.EXTRA_SELECT_ALL_TEXT,
+                        !Intent.ACTION_WEB_SEARCH.equals(action)
+                                && !SearchManager.INTENT_ACTION_GLOBAL_SEARCH.equals(action));
                 mActivity.startActivity(searchActivityIntent);
             }
         }
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivity.java b/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivity.java
index 1aa4848cb109f..5e31c130d1771 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivity.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivity.java
@@ -556,6 +556,20 @@ public class SearchActivity extends AsyncInitializationActivity
         return IntentUtils.safeGetStringExtra(getIntent(), SearchManager.QUERY);
     }
 
+    public static final String EXTRA_SELECT_ALL_TEXT =
+            "org.chromium.chrome.browser.searchwidget.SELECT_ALL_TEXT";
+
+    private boolean getShouldSelectAllQueryTextInSearchBox() {
+        String prepopulatedIntentQuery = getOptionalIntentQuery();
+        prepopulatedIntentQuery = prepopulatedIntentQuery != null ? prepopulatedIntentQuery : "";
+
+        if (prepopulatedIntentQuery.isEmpty()) {
+            return true;
+        }
+
+        return IntentUtils.safeGetBooleanExtra(getIntent(), EXTRA_SELECT_ALL_TEXT, true);
+    }
+
     private void beginQuery() {
         @SearchType int searchType = getSearchType(getIntent().getAction());
         if (isFromQuickActionSearchWidget()) {
@@ -565,7 +579,8 @@ public class SearchActivity extends AsyncInitializationActivity
                 searchType,
                 getOptionalIntentQuery(),
                 mLocationBarCoordinator.getVoiceRecognitionHandler(),
-                getWindowAndroid());
+                getWindowAndroid(),
+                getShouldSelectAllQueryTextInSearchBox());
     }
 
     @Override
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivityLocationBarLayout.java b/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivityLocationBarLayout.java
index 0cb52c2049b0c..e2e5edb3f9a8c 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivityLocationBarLayout.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/searchwidget/SearchActivityLocationBarLayout.java
@@ -130,13 +130,27 @@ public class SearchActivityLocationBarLayout extends LocationBarLayout {
             @Nullable String optionalText,
             @NonNull VoiceRecognitionHandler voiceRecognitionHandler,
             @NonNull WindowAndroid windowAndroid) {
+        beginQuery(searchType, optionalText, voiceRecognitionHandler, windowAndroid, true);
+    }
+
+    /**
+     * See {@link SearchActivityLocationBarLayout#beginQuery(int, String, VoiceRecognitionHandler, WindowAndroid)}
+     * for details. Added parameter(s):
+     * @param shouldSelectAllText Indicates if selection state of search query should be all selected or not.
+     */
+    void beginQuery(
+            @SearchType int searchType,
+            @Nullable String optionalText,
+            @NonNull VoiceRecognitionHandler voiceRecognitionHandler,
+            @NonNull WindowAndroid windowAndroid,
+            boolean shouldSelectAllText) {
         // Clear the text regardless of the promo decision.  This allows the user to enter text
         // before native has been initialized and have it not be cleared one the delayed beginQuery
         // logic is performed.
         mUrlCoordinator.setUrlBarData(
                 UrlBarData.forNonUrlText(optionalText == null ? "" : optionalText),
                 UrlBar.ScrollType.NO_SCROLL,
-                SelectionState.SELECT_ALL);
+                shouldSelectAllText ? SelectionState.SELECT_ALL : SelectionState.SELECT_END);
 
         if (mPendingSearchPromoDecision || (searchType != SearchType.TEXT && !mNativeInitialized)) {
             mPendingBeginQuery = true;

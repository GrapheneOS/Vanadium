From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Daniel Micay <danielmicay@gmail.com>
Date: Mon, 25 Apr 2022 06:19:32 -0400
Subject: [PATCH] disable more optimization guides features by default

---
 .../download/background_download_service_factory.cc      | 3 ++-
 .../optimization_guide_keyed_service.cc                  | 4 ++++
 .../core/optimization_guide_features.cc                  | 9 +++++++++
 .../core/optimization_guide_features.h                   | 6 ++++++
 4 files changed, 21 insertions(+), 1 deletion(-)

diff --git a/chrome/browser/download/background_download_service_factory.cc b/chrome/browser/download/background_download_service_factory.cc
index bde438ed438c6..71911553c4c65 100644
--- a/chrome/browser/download/background_download_service_factory.cc
+++ b/chrome/browser/download/background_download_service_factory.cc
@@ -179,7 +179,8 @@ BackgroundDownloadServiceFactory::BuildServiceInstanceFor(
   }
 #endif  // BUILDFLAG(IS_CHROMEOS)
 
-  if (!key->IsOffTheRecord()) {
+  if (optimization_guide::features::IsModelDownloadingEnabled() &&
+        !key->IsOffTheRecord()) {
     clients->insert(std::make_pair(
         download::DownloadClient::OPTIMIZATION_GUIDE_PREDICTION_MODELS,
         std::make_unique<download::DeferredClientWrapper>(
diff --git a/chrome/browser/optimization_guide/optimization_guide_keyed_service.cc b/chrome/browser/optimization_guide/optimization_guide_keyed_service.cc
index f6fa9dfef659e..53e2bdb2784c3 100644
--- a/chrome/browser/optimization_guide/optimization_guide_keyed_service.cc
+++ b/chrome/browser/optimization_guide/optimization_guide_keyed_service.cc
@@ -531,6 +531,10 @@ void OptimizationGuideKeyedService::OnProfileInitializationComplete(
   DCHECK(profile_observation_.IsObservingSource(profile));
   profile_observation_.Reset();
 
+  if (!optimization_guide::features::IsModelDownloadingEnabled()) {
+    return;
+  }
+
   if (profile->IsOffTheRecord()) {
     return;
   }
diff --git a/components/optimization_guide/core/optimization_guide_features.cc b/components/optimization_guide/core/optimization_guide_features.cc
index 15ab1ae560338..0f9a7a4c4c962 100644
--- a/components/optimization_guide/core/optimization_guide_features.cc
+++ b/components/optimization_guide/core/optimization_guide_features.cc
@@ -57,6 +57,11 @@ BASE_FEATURE(kOptimizationTargetPrediction,
              "OptimizationTargetPrediction",
              base::FEATURE_ENABLED_BY_DEFAULT);
 
+// Enables the downloading of models. Restored downstream.
+BASE_FEATURE(kOptimizationGuideModelDownloading,
+             "OptimizationGuideModelDownloading",
+             base::FEATURE_DISABLED_BY_DEFAULT);
+
 // Enables push notification of hints.
 BASE_FEATURE(kPushNotifications,
              "OptimizationGuidePushNotifications",
@@ -391,6 +396,10 @@ base::TimeDelta ModelExecutionWatchdogDefaultTimeout() {
       ));
 }
 
+bool IsModelDownloadingEnabled() {
+  return base::FeatureList::IsEnabled(kOptimizationGuideModelDownloading);
+}
+
 bool ShouldMetadataValidationFetchHostKeyed() {
   DCHECK(base::FeatureList::IsEnabled(kOptimizationGuideMetadataValidation));
   return GetFieldTrialParamByFeatureAsBool(kOptimizationGuideMetadataValidation,
diff --git a/components/optimization_guide/core/optimization_guide_features.h b/components/optimization_guide/core/optimization_guide_features.h
index b48165dae5d59..9705eff894766 100644
--- a/components/optimization_guide/core/optimization_guide_features.h
+++ b/components/optimization_guide/core/optimization_guide_features.h
@@ -38,6 +38,8 @@ BASE_DECLARE_FEATURE(kOptimizationGuideFetchingForSRP);
 COMPONENT_EXPORT(OPTIMIZATION_GUIDE_FEATURES)
 BASE_DECLARE_FEATURE(kOptimizationTargetPrediction);
 COMPONENT_EXPORT(OPTIMIZATION_GUIDE_FEATURES)
+BASE_DECLARE_FEATURE(kOptimizationGuideModelDownloading);
+COMPONENT_EXPORT(OPTIMIZATION_GUIDE_FEATURES)
 BASE_DECLARE_FEATURE(kPageTextExtraction);
 COMPONENT_EXPORT(OPTIMIZATION_GUIDE_FEATURES)
 BASE_DECLARE_FEATURE(kPushNotifications);
@@ -227,6 +229,10 @@ bool IsModelExecutionWatchdogEnabled();
 COMPONENT_EXPORT(OPTIMIZATION_GUIDE_FEATURES)
 base::TimeDelta ModelExecutionWatchdogDefaultTimeout();
 
+// Whether the ability to download models is enabled.
+COMPONENT_EXPORT(OPTIMIZATION_GUIDE_FEATURES)
+bool IsModelDownloadingEnabled();
+
 // Returns whether the page entities model should be executed on page content
 // for a user using |locale| as their browser language.
 COMPONENT_EXPORT(OPTIMIZATION_GUIDE_FEATURES)
